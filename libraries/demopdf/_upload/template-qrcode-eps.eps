%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (/var/www/vhosts/scanflip.com/httpdocs/scanflip/merchant/demopdf/_upload/template-qrcode-eps.eps)
%%CreationDate: (2015-02-12T04:29:12-06:00)
%%BoundingBox: 0 0 70 70
%%HiResBoundingBox: 0 0 70 70
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 70 70
userdict begin
DisplayImage
0 0
70 70
12
70 70
1
1
1
1
FFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFCFFFFFF
FFFFFFFFFFFCFFFFFFFFFFFFFFFFFCFC003DE7D80DE001FCFC003DE7D80DE001FCFCFFBF9F39F3
EFF9FCFCFFBF9F39F3EFF9FCFCC1B2643E0C6C19FCFCC1B38738C3EC19FCFCC1B38738C3EC19FC
FCC1B3F81F0FEC19FCFCC1B3F81F0FEC19FCFCFFB27FE0FFEFF9FCFCFFB27FE0FFEFF9FCFC0032
64D9326001FCFFFFF007DE03FFFFFCFFFFF007DE03FFFFFCFCC03F98C6F1E01FFCFCC03F98C6F1
E01FFCFC19C380C0FDE301FCFFC7B18027FE0CC7FCFFC7B18027FE0CC7FCFFE1C003C1CD9C07FC
FFE1C003C1CD9C07FCFFDFBE64DFC01C3FFCFFDFBE64DFC01C3FFCFCE04DE321CFF3C1FCFF1FBC
00070F8FE7FCFF1FBC00070F8FE7FCFCDFCE1F3F020F1FFCFCDFCE1F3F020F1FFCFF260DE72630
10F9FCFCC67004F83C0301FCFCC67004F83C0301FCFFC63F83390F80C7FCFFC63F83390F80C7FC
FCFFC260FFC18001FCFCE6020338021021FCFCE6020338021021FCFF204DFF06F3FFD9FCFF204D
FF06F3FFD9FCFF19B39FFF321327FCFF19B39FFF321327FCFF07F018DF0D8F01FCFF26007CC0F2
00FFFCFF26007CC0F200FFFCFFFFF003C00C7CC1FCFFFFF003C00C7CC1FCFC003C0407CC6CDFFC
FCFFB39B21007C1FFCFCFFB39B21007C1FFCFCC1B39F1EC2003FFCFCC1B39F1EC2003FFCFCC1B0
0321019C21FCFCC1B00321019C21FCFCC1B19C07F0033FFCFCFFBFE33E0E1C1FFCFCFFBFE33E0E
1C1FFCFC0031FF07F073E7FCFC0031FF07F073E7FCFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFC
FFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFCFFFFFFFFFFFFFFFFFCFFFFFF
FFFFFFFFFFFC
end
%%PageTrailer
%%Trailer
%%EOF
